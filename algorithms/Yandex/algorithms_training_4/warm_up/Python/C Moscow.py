"""
Мэрия Москвы основательно подготовилась к празднованию тысячелетия города в 2147 году, построив
под столицей бесконечную асфальтированную площадку, чтобы заменить все существующие в городе
автомобильные дороги. В память о кольцевых и радиальных дорогах разрешили двигаться
по площадке только двумя способами:
В сторону точки начала координат или от неё.
При этом из точки начала координат разрешено двигаться в любом направлении.
Вдоль окружности с центром в начале координат и радиусом,
который равен текущему расстоянию до начала координат.
Двигаться вдоль такой окружности разрешается в любом направлении (по или против часовой стрелки).
Вам, как ведущему программисту ответственной инстанции поручено разработать модуль,
который будет определять кратчайший путь из точки A, с координатами (xA, yA)
в точку B с координатами (xB, yB). Считайте, что менять направление движения
можно произвольное количество раз, но оно должно всегда соответствовать
одному из двух описанных выше вариантов.
"""

import math

def solution(x1, y1, x2, y2):
    edge1 = math.atan2(y1, x1)
    edge1 = edge1 if edge1 >= 0 else edge1 + 6.28319

    edge2 = math.atan2(y2, x2)
    edge2 = edge2 if edge2 >= 0 else edge2 + 6.28319

    edge = max(edge1, edge2) - min(edge1, edge2)
    edge = min(edge, 6.28319 - edge)


    r1 = math.sqrt(x1 ** 2 + y1 ** 2)
    r2 = math.sqrt(x2 ** 2 + y2 ** 2)
    l = min(r1, r2) * edge
    return (min(l + abs(r2 - r1), r1 + r2))


print(solution(*map(int, input().split())))

